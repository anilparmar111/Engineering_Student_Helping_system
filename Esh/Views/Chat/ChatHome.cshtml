@using Microsoft.AspNetCore.Identity
@using Esh.Data
@model Esh.ViewModel.HomeChatViewModel

@inject UserManager<ChatApplicationUser> UserManager

@{
    ViewData["Title"] = "ChatHome";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    @*<h3 class=" text-center">Messaging</h3>*@
    <div class="messaging">
        <div class="inbox_msg">
            <div class="inbox_people">
                <div class="headind_srch">
                    <div class="recent_heading">
                        <h4>All Users</h4>
                    </div>
                </div>
                <div class="inbox_chat">
                    @foreach (var chatUser in Model.Users)
                    {
                        <div class="chat_list">
                            <div class="chat_people">
                                <div class="chat_img"> <img src="https://ptetutorials.com/images/user-profile.png" alt="UserImage"> </div>
                                <div class="chat_ib">
                                    <a asp-route-UserId="@chatUser.Id" asp-action="FetchUser" asp-controller="Chat">
                                        <h5>@chatUser.Email</h5>
                                    </a>&nbsp;
                                    @if ((Model.LastMessageBetweenTwoUser[chatUser.Id] != null) &&
                                     (@Model.LastMessageBetweenTwoUser[chatUser.Id].Body != null))
                                    {
                                        <span class="chat_date">Date: @Model.LastMessageBetweenTwoUser[chatUser.Id].DateSend.ToShortDateString()</span>
                                        <p>Last Message: @Model.LastMessageBetweenTwoUser[chatUser.Id].Body</p>
                                    }

                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="mesgs">
                @if (Model.ReceiverUser != null)
                {
                    <h5>@Model.ReceiverUser.UserName</h5>
                    <div class="msg_history" id="msg">
                        @foreach (var msg in Model.MessagesBetween)
                        {
                            @if (msg.SenderUserID != ViewBag.loginUser)
                            {
                                <div class="incoming_msg">
                                    <div class="received_msg">
                                        <div class="received_withd_msg">
                                            <p>
                                                @msg.Body
                                            </p>
                                            <span class="time_date"> @msg.DateSend</span>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="outgoing_msg">
                                    <div class="sent_msg">
                                        <p>
                                            @msg.Body
                                        </p>
                                        <span class="time_date"> @msg.DateSend</span>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                    <div class="type_msg">
                        <div class="input_msg_write">
                            <input type="text" class="write_msg" id="txtmessage" placeholder="Type a message" required />
                            <button class="msg_send_btn" id="sendBtn" type="button">
                                <i class="fas fa-paper-plane" aria-hidden="true"></i>
                            </button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script>
    var connection = new signalR.HubConnectionBuilder().withUrl("/ChatHome").build();
//Disable send button until connection is established
    connection.on("ReceiveMessage", function (userid, message,isRight) {
        var msg = message.replace(/&/g, "&").replace(/</g, "<").replace(/>/g, ">");
        var encodedMsg = msg;
        var recId = "@ViewBag.receiverId";
        var d = new Date();
        if (!isRight) {
            var incoming = document.createElement("div");
            var receivemsg = document.createElement("div");
            var receivedwithmsg = document.createElement("div");
            var date = document.createElement("span");
            date.classList.add("time_date");
            date.textContent = d.toDateString();
            var msg = document.createElement("p");
            msg.textContent = encodedMsg;
            incoming.classList.add("incoming_msg");
            receivemsg.classList.add("received_msg");
            receivedwithmsg.classList.add("received_withd_msg");
            receivedwithmsg.appendChild(msg);
            receivedwithmsg.appendChild(date);
            receivemsg.appendChild(receivedwithmsg);
            incoming.appendChild(receivemsg);
            document.getElementById("msg").appendChild(incoming);
        }
        else {
            var outgoing = document.createElement("div");
            var sentmsg = document.createElement("div");
            var date = document.createElement("span");
            date.textContent = d.toDateString();
            date.classList.add("time_date");
            var msg = document.createElement("p");
            msg.textContent = encodedMsg;
            sentmsg.classList.add("sent_msg");
            outgoing.classList.add("outgoing_msg");
            sentmsg.appendChild(msg);
            sentmsg.appendChild(date);
            outgoing.appendChild(sentmsg);
            document.getElementById("msg").appendChild(outgoing);
        }
    });
    connection.start().then(function () {
        document.getElementById("sendBtn").disabled = false;
    }).catch(function (err) {
        return console.error(err.toString());
    });
    document.getElementById("sendBtn").addEventListener("click", function (message) {
        if (document.getElementById("txtmessage").value != "") {
            var message = document.getElementById("txtmessage").value;
            document.getElementById("txtmessage").value = "";
            var id = "@ViewBag.receiverId";
            connection.invoke("SendMessage", message, id).catch(function (err) {
                return console.error(err);
            });
            event.preventDefault();
        }
    });
</script>